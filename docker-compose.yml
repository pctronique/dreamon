
services:
###########################
# Setup the react container
###########################
    react:
        container_name: ${NAME_PROJECT}_react
        restart: always
        tty: true
        stdin_open: true
        build: 
            context: .docker/images/react
            args:
                - VALUE_NODEJS_VERSION=${VALUE_NODEJS_VERSION}
        volumes:
            - ./www/:/home/project/www
            - ./.env:/home/project/www/${FOLDER_CONFIG}/.env:rw
            - ./config/connection_mongo.json:/home/project/www/${FOLDER_CONFIG}/connection_mongo.json:rw
            - ./config/config_email.json:/home/project/www/${FOLDER_CONFIG}/config_email.json:rw
            - ./config/data:/docker-entrypoint-initdata.d:rw
            - ./config/dockercron:/var/docker/cron/dockercron:rw
            - ./.dockertmp/tmp/react:/var/tmp/docker/nodejs/:rw
            - ./.dockertmp/logs/react:/var/log/docker/nodejs/:rw
        environment:
            - TZ=${VALUE_TIMEZONES}
            - NODE_FOLDER_DATA=${FOLDER_DATA}
            - NODE_NAME_PROJECT=${NAME_PROJECT}
            - NODE_NAME_JS_SERVER=server.js
            #- IS_MODIF_NAME=NO
        ports:
            - ${VALUE_REACT_PORT}:3000

###########################
# Setup the mongo container
###########################
    mongo:
        container_name: ${NAME_PROJECT}_mongo
        build: 
            context: .docker/images/mongo
            args:
                - VALUE_MONGO_VERSION=${VALUE_MONGO_VERSION}
        restart: always
        volumes:
            - ./.dockertmp/logs/mongo:/var/log/docker/mongo/:rw
            - ./.dockertmp/mongo_data:/data/db
            - ./config/sgbd_data:/docker-entrypoint-initdb.d/:rw
        environment:
            - TZ=${VALUE_TIMEZONES}
            - MONGO_INITDB_HOST=${NAME_PROJECT}_mongo
            - MONGO_INITDB_DATABASE=${SGBD_DATABASE}
            - MONGO_INITDB_ROOT_USERNAME=${SGBD_USER}
            - MONGO_INITDB_ROOT_PASSWORD=${SGBD_PASSWORD}
        
###########################
# Setup the mongo-express container
###########################
    mongo-express:
        image: mongo-express:${VALUE_MONGOEXP_VERSION}
        container_name: ${NAME_PROJECT}_moexpress
        restart: always
        environment:
            - ME_CONFIG_MONGODB_SERVER=${NAME_PROJECT}_mongo
            - ME_CONFIG_MONGODB_ADMINUSERNAME=${SGBD_USER}
            - ME_CONFIG_MONGODB_ADMINPASSWORD=${SGBD_PASSWORD}
            - ME_CONFIG_BASICAUTH_USERNAME=${SGBD_USER}
            - ME_CONFIG_BASICAUTH_PASSWORD=${SGBD_PASSWORD}
            - ME_CONFIG_BASICAUTH=false
            - ME_CONFIG_MONGODB_URL=mongodb://${SGBD_USER}:${SGBD_PASSWORD}@${NAME_PROJECT}_mongo:27017/?authSource=admin
        depends_on:
            - mongo
        ports:
            - ${VALUE_MONGOEXP_PORT}:8081
        
###########################
# Setup the mailhog container
###########################
    mailhog:
        build:
            context: .docker/images/mailhog
            args:
                - VALUE_MHOG_VERSION=${VALUE_MAILHOG_VERSION}
        container_name: ${NAME_PROJECT}_mailhog
        restart: always
        volumes:
            - ./.dockertmp/mailhog:/mailhog
            - ./config/email_data:/docker-entrypoint-initdata.d:rw
        environment:
            - MH_STORAGE=maildir
            - MH_MAILDIR_PATH=/mailhog
        ports:
            - ${VALUE_MAILHOG_PORT}:8025
